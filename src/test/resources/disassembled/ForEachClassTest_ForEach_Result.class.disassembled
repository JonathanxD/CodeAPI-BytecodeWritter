md5: 7fd8edc31c0d308825ca6d3eb72315fc

version: Java 16 (60)
access: ACC_PUBLIC (33)

source: ForEach.cai

!signature: null
!extends: java/lang/Object
!implements: []
public class com.ForEach extends java.lang.Object {

    !access: ACC_PUBLIC (1)
    !signature: (Ljava/util/List;)V
    !parameter[name: strList, access:  (0)]
    public void <init>(java.util.List) {
      desc: (Ljava/util/List;)V 
      maxStack: 2, maxLocals: 4 
      Label_0:
        aload 0
        invokespecial java.lang.Object.<init>()void (ownerIsInterface: false)
      Label_1:
       LINE 1 -> Label_1
        aload 1
        invokeinterface java.lang.Iterable.iterator()java.util.Iterator (ownerIsInterface: true)
        astore 2
      Label_2:
       FRAME[type: F_FULL, locals: 3, local: {Reference[com.ForEach], Reference[java.util.List], Reference[java.util.Iterator]}, stacks: 0, stack: {}]
        aload 2
        invokeinterface java.util.Iterator.hasNext()boolean (ownerIsInterface: true)
        ifeq Label_5
        aload 2
        invokeinterface java.util.Iterator.next()java.lang.Object (ownerIsInterface: true)
        checkcast java.lang.String
      Label_3:
        astore 3
      Label_4:
       LINE 2 -> Label_4
        getstatic java.lang.System.out (type: java.io.PrintStream)
        aload 3
        invokevirtual java.io.PrintStream.println(java.lang.Object)void (ownerIsInterface: false)
        goto Label_2
      Label_5:
       FRAME[type: F_SAME, locals: 0, local: {}, stacks: 0, stack: {}]
        return
      Label_6:
      LocalVariables {
        index: 3, name: str, start: Label_3, end: Label_5, type: java.lang.String, signature: null
        index: 1, name: strList, start: Label_0, end: Label_6, type: java.util.List, signature: Ljava/util/List<Ljava/lang/String;>;
        index: 0, name: this, start: Label_0, end: Label_6, type: com.ForEach, signature: null
      }
    }
    
    !access: PACKAGE_PRIVATE, ACC_STATIC (8)
    static void <clinit>() {
      desc: ()V 
      maxStack: 0, maxLocals: 0 
        return
    }
    
}